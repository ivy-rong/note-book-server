// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  username String @unique @db.VarChar(50)
  password String @db.VarChar(255)

  notes Note[]

  createdAt DateTime? @default(now()) @map("created_at") @db.Timestamptz(3) // 创建时间
  createdBy Int?      @map("created_by") // 创建人
  updatedAt DateTime? @updatedAt @map("updated_at") @db.Timestamptz(3) // 更新时间
  updatedBy Int?      @map("updated_by") // 更新人
  deletedAt DateTime? @map("deleted_at") @db.Timestamptz(3) // 删除时间
  deletedBy Int?      @map("deleted_by") // 删除人
}

model Note {
  id        Int     @id @default(autoincrement())
  published Boolean @default(false)

  contents Content[]

  author   User @relation(fields: [authorId], references: [id])
  authorId Int  @map("author_id")

  createdAt DateTime? @default(now()) @map("created_at") @db.Timestamptz(3) // 创建时间
  createdBy Int?      @map("created_by") // 创建人
  updatedAt DateTime? @updatedAt @map("updated_at") @db.Timestamptz(3) // 更新时间
  updatedBy Int?      @map("updated_by") // 更新人
  deletedAt DateTime? @map("deleted_at") @db.Timestamptz(3) // 删除时间
  deletedBy Int?      @map("deleted_by") // 删除人
}

model Content {
  id      Int    @id @default(autoincrement())
  content String @db.Text

  note   Note? @relation(fields: [noteId], references: [id])
  noteId Int   @map("note_id")

  createdAt DateTime? @default(now()) @map("created_at") @db.Timestamptz(3) // 创建时间
  createdBy Int?      @map("created_by") // 创建人
  updatedAt DateTime? @updatedAt @map("updated_at") @db.Timestamptz(3) // 更新时间
  updatedBy Int?      @map("updated_by") // 更新人
  deletedAt DateTime? @map("deleted_at") @db.Timestamptz(3) // 删除时间
  deletedBy Int?      @map("deleted_by") // 删除人
}
